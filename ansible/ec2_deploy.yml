- name: Deploy to EC2
  hosts: localhost
  connection: local
  tasks:
    - name: Launch EC2 Instance
      amazon.aws.ec2_instance:
        name: eshop
        instance_type: t2.micro
        image:
          id: ami-0b0dcb5067f052a63
        region: us-east-1
        key_name: devops
        vpc_subnet_id: subnet-055698fe877fc544f
        security_group: eshop
        count: 1
        network:
          assign_public_ip: yes
        wait: yes
        state: "running"
        access_key: "{{ aws_access_key_id }}"
        secret_key: "{{ aws_secret_access_key }}"
        session_token: "{{ aws_session_token }}"
      register: ec2

    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 300
      loop: "{{ ec2.instances }}"

- name: Configure EC2
  hosts: launched
  connection: ssh
  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - docker
          - git
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Start Docker on startup
      shell: systemctl enable docker --now
      become: yes
    - name: Set rights to Docker
      shell: usermod -a -G docker ec2-user
      become: yes

    - name: Get project files from GIT
      git:
        repo: "https://github.com/tomasnyvlt/4IT572-semestralka"
        dest: ./app
    - name: Build docker image
      shell: cd app && docker build -t eshop:latest .
      become: yes
    - name: Run eshop
      shell: docker run -p 80:3000 eshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Remove old EC2
  hosts: localhost
  tasks:
  - name: Gather information about eshop instances
    amazon.aws.ec2_instance:
      region: us-east-1
      access_key: "{{ aws_access_key_id }}"
      secret_key: "{{ aws_secret_access_key }}"
      session_token: "{{ aws_session_token }}"
      filters:
        "tag:Name": "eshop"
      exact_count: 2
      wait: yes
